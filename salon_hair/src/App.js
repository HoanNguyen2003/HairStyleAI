import React, { useState } from 'react';
import Header from './components/Header';
import Navbar from './components/Navbar';
import UploadSection from './components/UploadSection';
import ResultSection from './components/ResultSection';
import TrendingStyles from './components/TrendingStyles';
import Reviews from './components/Reviews';
import Footer from './components/Footer';
import Chatbox from './components/Chatbot';
import './styles/style.scss';

function App() {
  const [faceImage, setFaceImage] = useState(null);
  const [hairShape, setHairShape] = useState(null);
  const [hairColor, setHairColor] = useState(null);
  const [resultImage, setResultImage] = useState(null);
  const [isProcessing, setIsProcessing] = useState(false);
  const [error, setError] = useState(null);

  const handleProcessImages = async () => {
    if (!faceImage || !hairShape || !hairColor) {
      setError('Vui l√≤ng t·∫£i l√™n ƒë·∫ßy ƒë·ªß c√°c ·∫£nh c·∫ßn thi·∫øt');
      return;
    }

    setIsProcessing(true);
    setError(null);

    const formData = new FormData();
    formData.append('face', faceImage);
    formData.append('shape', hairShape);
    formData.append('color', hairColor);

    try {
      const response = await fetch('http://localhost:5000/swap', {
        method: 'POST',
        body: formData,
      });

      if (!response.ok) {
        throw new Error(`L·ªói t·ª´ server: ${response.status}`);
      }

      const blob = await response.blob();
      setResultImage(URL.createObjectURL(blob));
    } catch (err) {
      setError(`ƒê√£ x·∫£y ra l·ªói: ${err.message}`);
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <div className="app">
      <Header />
      <Navbar />
      
      <div className="container">
        <div className="intro card">
          <h2 className="card-header">üëã Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi c√¥ng c·ª• th·ª≠ ki·ªÉu t√≥c ·∫£o!</h2>
          <p>C√¥ng ngh·ªá AI c·ªßa ch√∫ng t√¥i s·∫Ω gi√∫p b·∫°n d·ªÖ d√†ng th·ª≠ nghi·ªám c√°c ki·ªÉu t√≥c v√† m√†u s·∫Øc kh√°c nhau tr∆∞·ªõc khi quy·∫øt ƒë·ªãnh thay ƒë·ªïi di·ªán m·∫°o th·ª±c t·∫ø.</p>
        </div>
        
        <div className="main-content">
          <UploadSection 
            faceImage={faceImage}
            hairShape={hairShape}
            hairColor={hairColor}
            setFaceImage={setFaceImage}
            setHairShape={setHairShape}
            setHairColor={setHairColor}
            handleProcessImages={handleProcessImages}
            isProcessing={isProcessing}
            error={error}
          />
          
          <ResultSection 
            resultImage={resultImage}
            isProcessing={isProcessing}
          />
        </div>
        
        <TrendingStyles />
        <Reviews />
      </div>
      
      <Footer />
      <Chatbox />
    </div>
  );
}

export default App;